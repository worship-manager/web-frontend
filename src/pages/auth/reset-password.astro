---
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Button from "@components/ui/button.astro";
import Layout from "@layouts/Layout.astro";
---

<Layout title="Forgot Password">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Reset Password</Fragment>
      <Fragment slot="desc">Enter the Code Sent to Your Email</Fragment>
    </Sectionhead>

    <div class="gap-10 mx-auto max-w-xl mt-16">
      <form id="reset-password-form" novalidate>
        <div class="mb-5">
          <label>Reset Code</label>
          <input
            type="text"
            placeholder="XXXXXX"
            required
            class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
            name="code"
          />
        </div>
        <Button type="submit" id="submit-btn" class="w-full">Submit</Button>
        <div id="result" class="mt-3 text-center"></div>
      </form>
    </div>
  </Container>
</Layout>

<script>
  const form = document.getElementById("reset-password-form") as HTMLFormElement;
  const result = document.getElementById("result") as HTMLDivElement;
  const submitBtn = document.getElementById("submit-btn") as HTMLButtonElement;

  form?.addEventListener("submit", function (e) {
    e.preventDefault();

    submitBtn.disabled = true;

    const formData = new FormData(form);
    const formObj = Object.fromEntries(formData);

    const resetDataString = sessionStorage.getItem("resetPasswordData");
    if (!resetDataString) {
      location.href = "/auth/forgot-password";
      return;
    }
    const resetData = JSON.parse(resetDataString);
    if (!resetData || !resetData.email || !resetData.newPassword) {
      location.href = "/auth/forgot-password";
      return;
    }

    const object = { ...formObj, ...resetData };

    const reqUrl = import.meta.env.PUBLIC_SERVER_URL;
    fetch(reqUrl + "/api/user/reset-password", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(object),
      mode: "cors",
      credentials: "include",
    })
      .then(async (res) => {
        const text = await res.text();
        if (res.status != 200) {
					const error = JSON.parse(text);
          result.classList.remove("text-green-500");
          result.classList.add("text-red-500");
          result.innerHTML = error.cause;
          return;
        }

        sessionStorage.removeItem("resetPasswordData");

        result.classList.remove("text-red-500");
        result.classList.add("text-green-500");
        result.innerHTML = text;
        setTimeout(() => {
          location.href = "/auth/login";
        }, 1000);
      })
      .catch((error) => {
        console.log(error);
        result.innerHTML = "Something went wrong!";
      })
      .finally(() => {
        submitBtn.disabled = false;
      });
  });
</script>
